{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdamLim\\\\warehouse-sim\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPoints = [{\n  id: 1,\n  type: \"QR Code\",\n  position: [51.505, -0.09]\n}, {\n  id: 2,\n  type: \"Charging Station\",\n  position: [51.51, -0.1]\n}, {\n  id: 3,\n  type: \"Robot\",\n  position: [51.52, -0.12]\n}];\nconst AddPoint = ({\n  onAdd\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      const type = prompt(\"Enter point type (QR Code / Charging Station / Robot):\");\n      if (type) {\n        onAdd({\n          id: Date.now(),\n          type,\n          position: [e.latlng.lat, e.latlng.lng]\n        });\n      }\n    }\n  });\n  return null;\n};\n_s(AddPoint, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = AddPoint;\nconst WarehouseMap = () => {\n  _s2();\n  const [points, setPoints] = useState(initialPoints);\n  const addPoint = newPoint => {\n    setPoints([...points, newPoint]);\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [51.505, -0.09],\n    zoom: 13,\n    style: {\n      height: \"80vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPoint, {\n      onAdd: addPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), points.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n      position: point.position,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: point.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, point.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(WarehouseMap, \"dGD78Kt/TG+TlxojG6NJAhKWlUQ=\");\n_c2 = WarehouseMap;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Warehouse Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AddPoint\");\n$RefreshReg$(_c2, \"WarehouseMap\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","useMapEvents","jsxDEV","_jsxDEV","initialPoints","id","type","position","AddPoint","onAdd","_s","click","e","prompt","Date","now","latlng","lat","lng","_c","WarehouseMap","_s2","points","setPoints","addPoint","newPoint","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","map","point","_c2","App","className","_c3","$RefreshReg$"],"sources":["C:/Users/AdamLim/warehouse-sim/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst initialPoints = [\r\n  { id: 1, type: \"QR Code\", position: [51.505, -0.09] },\r\n  { id: 2, type: \"Charging Station\", position: [51.51, -0.1] },\r\n  { id: 3, type: \"Robot\", position: [51.52, -0.12] },\r\n];\r\n\r\nconst AddPoint = ({ onAdd }) => {\r\n  useMapEvents({\r\n    click(e) {\r\n      const type = prompt(\"Enter point type (QR Code / Charging Station / Robot):\");\r\n      if (type) {\r\n        onAdd({ id: Date.now(), type, position: [e.latlng.lat, e.latlng.lng] });\r\n      }\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nconst WarehouseMap = () => {\r\n  const [points, setPoints] = useState(initialPoints);\r\n\r\n  const addPoint = (newPoint) => {\r\n    setPoints([...points, newPoint]);\r\n  };\r\n\r\n  return (\r\n    <MapContainer center={[51.505, -0.09]} zoom={13} style={{ height: \"80vh\", width: \"100%\" }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <AddPoint onAdd={addPoint} />\r\n      {points.map((point) => (\r\n        <Marker key={point.id} position={point.position}>\r\n          <Popup>{point.type}</Popup>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Warehouse Simulation</h1>\r\n      <div className=\"map-container\">\r\n        {/* This is the blank area where the map will go */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
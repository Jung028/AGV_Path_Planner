{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdamLim\\\\warehouse-sim\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 10; // 10x10 Grid\n\nconst initialGrid = Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(null));\nconst WarehouseGrid = () => {\n  _s();\n  const [grid, setGrid] = useState(initialGrid);\n  const handleCellClick = (row, col) => {\n    const type = prompt(\"Enter object type (QR Code / Charging Station / Robot):\");\n    if (type) {\n      const newGrid = grid.map((r, rIdx) => r.map((cell, cIdx) => rIdx === row && cIdx === col ? type : cell));\n      setGrid(newGrid);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        onClick: () => handleCellClick(rowIndex, colIndex),\n        children: cell && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cell\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this)\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(WarehouseGrid, \"AwkJSX1oACPagmKnbp0h0/fPMH4=\");\n_c = WarehouseGrid;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Warehouse Grid Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WarehouseGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"WarehouseGrid\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GRID_SIZE","initialGrid","Array","fill","map","WarehouseGrid","_s","grid","setGrid","handleCellClick","row","col","type","prompt","newGrid","r","rIdx","cell","cIdx","className","children","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/AdamLim/warehouse-sim/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst GRID_SIZE = 10; // 10x10 Grid\r\n\r\nconst initialGrid = Array(GRID_SIZE)\r\n  .fill(null)\r\n  .map(() => Array(GRID_SIZE).fill(null));\r\n\r\nconst WarehouseGrid = () => {\r\n  const [grid, setGrid] = useState(initialGrid);\r\n\r\n  const handleCellClick = (row, col) => {\r\n    const type = prompt(\"Enter object type (QR Code / Charging Station / Robot):\");\r\n    if (type) {\r\n      const newGrid = grid.map((r, rIdx) =>\r\n        r.map((cell, cIdx) => (rIdx === row && cIdx === col ? type : cell))\r\n      );\r\n      setGrid(newGrid);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      {grid.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"grid-row\">\r\n          {row.map((cell, colIndex) => (\r\n            <div key={colIndex} className=\"grid-cell\" onClick={() => handleCellClick(rowIndex, colIndex)}>\r\n              {cell && <span>{cell}</span>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>Warehouse Grid Simulation</h1>\r\n      <WarehouseGrid />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;;AAEtB,MAAMC,WAAW,GAAGC,KAAK,CAACF,SAAS,CAAC,CACjCG,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,MAAMF,KAAK,CAACF,SAAS,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,CAAC;AAEzC,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACI,WAAW,CAAC;EAE7C,MAAMQ,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACpC,MAAMC,IAAI,GAAGC,MAAM,CAAC,yDAAyD,CAAC;IAC9E,IAAID,IAAI,EAAE;MACR,MAAME,OAAO,GAAGP,IAAI,CAACH,GAAG,CAAC,CAACW,CAAC,EAAEC,IAAI,KAC/BD,CAAC,CAACX,GAAG,CAAC,CAACa,IAAI,EAAEC,IAAI,KAAMF,IAAI,KAAKN,GAAG,IAAIQ,IAAI,KAAKP,GAAG,GAAGC,IAAI,GAAGK,IAAK,CACpE,CAAC;MACDT,OAAO,CAACM,OAAO,CAAC;IAClB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5Bb,IAAI,CAACH,GAAG,CAAC,CAACM,GAAG,EAAEW,QAAQ,kBACtBtB,OAAA;MAAoBoB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrCV,GAAG,CAACN,GAAG,CAAC,CAACa,IAAI,EAAEK,QAAQ,kBACtBvB,OAAA;QAAoBoB,SAAS,EAAC,WAAW;QAACI,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACY,QAAQ,EAAEC,QAAQ,CAAE;QAAAF,QAAA,EAC1FH,IAAI,iBAAIlB,OAAA;UAAAqB,QAAA,EAAOH;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADpBL,QAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN;IAAC,GALMN,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA4BnB,MAAMwB,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACE9B,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAyB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA,CAACM,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACG,GAAA,GAPID,GAAG;AAST,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdamLim\\\\warehouse-sim\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CELL_SIZE = 50; // Size of each grid cell\n\nconst App = () => {\n  _s();\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [scale, setScale] = useState(1);\n  const [dragging, setDragging] = useState(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // Start dragging\n  const handleMouseDown = e => {\n    setDragging(true);\n    dragStart.current = {\n      x: e.clientX,\n      y: e.clientY\n    };\n  };\n\n  // Move the map\n  const handleMouseMove = e => {\n    if (!dragging) return;\n    const dx = e.clientX - dragStart.current.x;\n    const dy = e.clientY - dragStart.current.y;\n    setOffset(prev => ({\n      x: prev.x + dx,\n      y: prev.y + dy\n    }));\n    dragStart.current = {\n      x: e.clientX,\n      y: e.clientY\n    };\n  };\n\n  // Stop dragging\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  // Handle zoom\n  const handleWheel = e => {\n    setScale(prev => Math.max(0.5, Math.min(2, prev - e.deltaY * 0.001)));\n  };\n\n  // Generate grid cells dynamically\n  const renderGrid = () => {\n    const gridSize = 10; // Number of cells in view\n    const cells = [];\n    for (let row = -gridSize; row < gridSize; row++) {\n      for (let col = -gridSize; col < gridSize; col++) {\n        const x = col * CELL_SIZE + offset.x % CELL_SIZE;\n        const y = row * CELL_SIZE + offset.y % CELL_SIZE;\n        cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          style: {\n            left: x,\n            top: y,\n            width: CELL_SIZE * scale,\n            height: CELL_SIZE * scale\n          }\n        }, `${row},${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    onWheel: handleWheel,\n    children: renderGrid()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IzaFs8Op7zJZYPYyi4pvbiTirXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","CELL_SIZE","App","_s","offset","setOffset","x","y","scale","setScale","dragging","setDragging","dragStart","handleMouseDown","e","current","clientX","clientY","handleMouseMove","dx","dy","prev","handleMouseUp","handleWheel","Math","max","min","deltaY","renderGrid","gridSize","cells","row","col","push","className","style","left","top","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","onWheel","children","_c","$RefreshReg$"],"sources":["C:/Users/AdamLim/warehouse-sim/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst CELL_SIZE = 50; // Size of each grid cell\r\n\r\nconst App = () => {\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [scale, setScale] = useState(1);\r\n  const [dragging, setDragging] = useState(false);\r\n  const dragStart = useRef({ x: 0, y: 0 });\r\n\r\n  // Start dragging\r\n  const handleMouseDown = (e) => {\r\n    setDragging(true);\r\n    dragStart.current = { x: e.clientX, y: e.clientY };\r\n  };\r\n\r\n  // Move the map\r\n  const handleMouseMove = (e) => {\r\n    if (!dragging) return;\r\n    const dx = e.clientX - dragStart.current.x;\r\n    const dy = e.clientY - dragStart.current.y;\r\n    setOffset((prev) => ({ x: prev.x + dx, y: prev.y + dy }));\r\n    dragStart.current = { x: e.clientX, y: e.clientY };\r\n  };\r\n\r\n  // Stop dragging\r\n  const handleMouseUp = () => {\r\n    setDragging(false);\r\n  };\r\n\r\n  // Handle zoom\r\n  const handleWheel = (e) => {\r\n    setScale((prev) => Math.max(0.5, Math.min(2, prev - e.deltaY * 0.001)));\r\n  };\r\n\r\n  // Generate grid cells dynamically\r\n  const renderGrid = () => {\r\n    const gridSize = 10; // Number of cells in view\r\n    const cells = [];\r\n\r\n    for (let row = -gridSize; row < gridSize; row++) {\r\n      for (let col = -gridSize; col < gridSize; col++) {\r\n        const x = col * CELL_SIZE + offset.x % CELL_SIZE;\r\n        const y = row * CELL_SIZE + offset.y % CELL_SIZE;\r\n\r\n        cells.push(\r\n          <div\r\n            key={`${row},${col}`}\r\n            className=\"cell\"\r\n            style={{\r\n              left: x,\r\n              top: y,\r\n              width: CELL_SIZE * scale,\r\n              height: CELL_SIZE * scale,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return cells;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"map-container\"\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n      onWheel={handleWheel}\r\n    >\r\n      {renderGrid()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}